// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Template.Api.Infraestrutura.Dados.Migrations
{
    [DbContext(typeof(ContextoTemplate))]
    [Migration("20190131124133_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Auditoria.AuditoriaColuna", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuditoriaTabelaId");

                    b.Property<string>("NomeColuna");

                    b.Property<string>("ValorAnterior");

                    b.Property<string>("ValorAtual");

                    b.HasKey("Id");

                    b.HasIndex("AuditoriaTabelaId");

                    b.ToTable("AuditoriaColunas");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Auditoria.AuditoriaTabela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcaoRealizado");

                    b.Property<DateTime>("DataOcorrencia");

                    b.Property<int>("IdRegistro");

                    b.Property<string>("NomeTabela");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("AuditoriaTabelas");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Configuracoes.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chave");

                    b.Property<string>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.ControleAcesso.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataExclusao");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Perfis");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.ControleAcesso.PerfilUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PerfilId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("PerfilId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("PerfisUsuarios");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.ControleAcesso.Permissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chave");

                    b.Property<DateTime?>("DataExclusao");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Permissoes");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.ControleAcesso.PermissaoPerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataExclusao");

                    b.Property<string>("Nome");

                    b.Property<int>("PerfilId");

                    b.HasKey("Id");

                    b.ToTable("PermissoesPerfis");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.ControleAcesso.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf");

                    b.Property<DateTime?>("DataExclusao");

                    b.Property<DateTime>("DataNascimento");

                    b.Property<string>("Email");

                    b.Property<string>("Matricula");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Historico.HistoricoConsulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataExecucao");

                    b.Property<string>("NomeConsulta");

                    b.Property<string>("Sql");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("HistoricosConsultas");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Historico.HistoricoFiltro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("HistoricoConsultaId");

                    b.Property<string>("NomeConsulta");

                    b.Property<string>("OperadorLogico");

                    b.Property<string>("Valor");

                    b.HasKey("Id");

                    b.ToTable("HistoricosFiltros");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Logs.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataOcorrencia");

                    b.Property<string>("Descricao");

                    b.Property<string>("Mensagem");

                    b.Property<string>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Mensageria.DestinatarioMensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Conteudo");

                    b.Property<DateTime?>("DataArquivamento");

                    b.Property<DateTime?>("DataLeitura");

                    b.Property<int>("MensagemId");

                    b.Property<int>("UsuarioDestinatarioId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("MensagemId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("DestinatariosMensagens");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Mensageria.Mensagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Assunto");

                    b.Property<string>("Conteudo");

                    b.Property<DateTime?>("DataArquivamento");

                    b.Property<DateTime>("DataEnvio");

                    b.Property<int>("MensagemOrigemId");

                    b.Property<int>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mensagens");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Auditoria.AuditoriaColuna", b =>
                {
                    b.HasOne("Template.Api.Dominio.Entidades.Auditoria.AuditoriaTabela", "AuditoriaTabela")
                        .WithMany()
                        .HasForeignKey("AuditoriaTabelaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Auditoria.AuditoriaTabela", b =>
                {
                    b.HasOne("Template.Api.Dominio.Entidades.ControleAcesso.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.ControleAcesso.PerfilUsuario", b =>
                {
                    b.HasOne("Template.Api.Dominio.Entidades.ControleAcesso.Perfil", "Perfil")
                        .WithMany()
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Template.Api.Dominio.Entidades.ControleAcesso.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Historico.HistoricoConsulta", b =>
                {
                    b.HasOne("Template.Api.Dominio.Entidades.ControleAcesso.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Mensageria.DestinatarioMensagem", b =>
                {
                    b.HasOne("Template.Api.Dominio.Entidades.Mensageria.Mensagem", "Mensagem")
                        .WithMany()
                        .HasForeignKey("MensagemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Template.Api.Dominio.Entidades.ControleAcesso.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("Template.Api.Dominio.Entidades.Mensageria.Mensagem", b =>
                {
                    b.HasOne("Template.Api.Dominio.Entidades.ControleAcesso.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
